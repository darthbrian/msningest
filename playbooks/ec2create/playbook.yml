---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: msn-secgroup
      image: ami-0cb72367e98845d43
      #user_data: "{{ lookup('file', '/home/thor/pythonwork/git/msningest/dockinst.txt') }}"
      keypair: aws-eb # This is one of my keys that I already have in AWS
      region: us-west-2 # Change the Region
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        ec2_group:
          name: "{{ security_group }}"
          description: Security Group for msningest EC2 instances 
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: msn-secgroup

      - name: Launch the new EC2 Instance
        ec2:
                group : "{{ security_group }}"
                instance_type: "{{ instance_type }}"
                image: "{{ image }}"
                wait: true
                region: "{{ region }}"
                keypair: "{{ keypair }}"
                count: "{{count}}"
                user_data: "{{ lookup('file', '/home/thor/pythonwork/git/msningest/dockinst.txt') }}"
        register: ec2

        #- name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
      - name: Add EC2 IPs to inventory file
        lineinfile:
                path: "./hosts"
                regexp: "{{ item.public_ip }}"
                insertafter: "[webserver]"
                line: "{{ item.public_ip }}"
        with_items: "{{ ec2.instances }}"


      - name: Wait for SSH to come up
        wait_for:
                host: "{{ item.public_ip }}"
                port: 22
                state: started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        ec2_tag:
                resource: "{{ item.id }}"
                region: "{{ region }}"
                state: present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: webserver
